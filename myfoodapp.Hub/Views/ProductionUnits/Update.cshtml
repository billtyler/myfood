@using myfoodapp.Hub.Models
@model ProductionUnitViewModel

<script type="text/javascript">

    function onBackClick() {
        var productionUnitId = $('#routeDataId').val();
        window.location = window.location.origin + "/ProductionUnits/Details/" + productionUnitId;
    }

    function onAdd(e) {
        var productionUnitId = $('#routeDataId').val();

        if (e.dataItems[0] == null)
            return;

        var currentOptionId = e.dataItems[0].Id;

        $.ajax({
            url: "@Url.Action("AddOptionFromProductionUnit", "ProductionUnits")",
            dataType: "json",
            data: { id: productionUnitId, optionId: currentOptionId },
            type: "POST",
            success: function (response) {

            }
        });
    }

    function onRemove(e) {
        var productionUnitId = $('#routeDataId').val();
        var currentOptionId = e.dataItems[0].Id;

        if (e.dataItems[0] == null)
            return;

        $.ajax({
            url: "@Url.Action("RemoveOptionFromProductionUnit", "ProductionUnits")",
            dataType: "json",
            data: { id: productionUnitId, optionId: currentOptionId },
            type: "POST",
            success: function (response) {

            }
        });
    }

    function onSuccess() {

    }

</script>

<input type="hidden" value='@ViewContext.RouteData.Values["id"]' id="routeDataId" />

<div id="main-section-header" class="row">
    <h2 id="title" class="col-md-3">[[[Production Units Management]]]</h2>
    <div style="clear:both;"></div>
</div>

<div id="productionUnits-grid" class="main-section-content row">
    <div id="productionUnits-details" class="col-md-2">
        <h3 class="section-header">[[[Change Production Units Settings]]]</h3>
        <br />

        <p>
            @(Html.Kendo().Button()
            .Name("backButton")
            .HtmlAttributes(new { @class = "toggleButton btn-block" })
            .Content("[[[Back to Details]]]")
            .Events(ev => ev.Click("onBackClick")))
        </p>
    </div>
    <div id="grid-container" class="col-xs-10">
        <div id="center">
            <section id="form">
                @using (Html.BeginForm("Update", "ProductionUnits", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.locationLatitude)
                    @Html.HiddenFor(model => model.locationLongitude)
                    @Html.HiddenFor(model => model.options)
                    @Html.HiddenFor(model => model.picturePath)

                    @Html.HiddenFor(model => model.productionUnitStatusId)
                    @Html.HiddenFor(model => model.productionUnitTypeId)
                    @Html.HiddenFor(model => model.ownerId)
                    @Html.HiddenFor(model => model.version)
                    @Html.HiddenFor(model => model.startDate)
                    @Html.HiddenFor(model => model.reference)

                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.info, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @(Html.Kendo().TextBoxFor(model => model.info)
                            .Name("info")
                            .HtmlAttributes(new { @readonly = "true", @style = "width:100%" })
                            )
                        </div>
                    </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.owner, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @(Html.Kendo().TextBoxFor(model => model.owner.pioneerCitizenName)
                                .HtmlAttributes(new { @readonly = "true", @style = "width:100%" })
                                )
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.hydroponicType, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @(Html.Kendo().DropDownListFor(m => m.hydroponicTypeId)
                                  .DataTextField("name")
                                  .DataValueField("Id")
                                  .AutoBind(true)
                                  .HtmlAttributes(new { @style = "width:100%" })
                                  .DataSource(source =>
                                  {
                                      source.Read(read =>
                                      {
                                          read.Action("HydroponicTypes_Read", "ProductionUnits");
                                      });
                                  })
                                )
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.picturePath, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @(Html.Kendo().Upload()
                                .Name("files")
                                .Multiple(false)
                                .Async(a => a
                                    .Save("SavePicture", "ProductionUnits", new { picturePath = Model.picturePath })
                                    .Remove("RemovePicture", "ProductionUnits")
                                    .AutoUpload(true)
                                )
                                .Validation(validation =>
                                {
                                    validation.AllowedExtensions(new string[] { ".jpg", ".jpeg" });
                                    validation.MaxFileSize(2000000);
                                })
                                .Events(e => e.Success("onSuccess"))
                                )
                            </div>
                       </div>
                            @*<div class="box" id="ProductionUnitPicture"/>*@

                       <div class="form-group">
                                @Html.LabelFor(m => m.options, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @(Html.Kendo().ListBox()
                                        .Name("optionList")
                                        .Toolbar(toolbar =>
                                        {
                                            toolbar.Position(Kendo.Mvc.UI.Fluent.ListBoxToolbarPosition.Right);
                                            toolbar.Tools(tools => tools
                                                    .TransferTo()
                                                    .TransferFrom()
                                                );
                                        })
                                        .HtmlAttributes(new { title = "[[[Option List]]]", @style = "width:50%" })
                                        .DataTextField("name")
                                        .ConnectWith("installedList")
                                        .BindTo(ViewBag.Options)
                                    )

                                   @(Html.Kendo().ListBox()
                                        .Name("installedList")
                                        .HtmlAttributes(new { title = "[[[Installed Options]]]", @style = "width:49%" })
                                        .BindTo(Model.options)
                                        .DataValueField("Id")
                                        .DataTextField("name")
                                        .Selectable(ListBoxSelectable.Single)
                                        .Events(events => events
                                            .Add("onAdd")
                                            .Remove("onRemove")
                                        )
                                    )
                                </div>
                       </div>
                        <br/>
                        <div>
                            <div style="text-align:right">
                                <input type="submit" value="[[[Save & Close]]]" class="btn btn-default" />
                            </div>
                        </div>
                }
            </section>
        </div>
    </div>
</div>

<style type="text/css">

    @@media screen and (max-width: 800px) {

            #center {
                margin: auto;
                width: 80%;
                border: 1px solid green;
                padding: 10px;
                position: relative;
                top: 10% !important;
                transform: translateY(10%) !important;
            }

            #grid-container {
                width: 100%;
            }

            div.k-listbox {
                width: 100% !important;
            }
    }
     
    .k-button {
     height: 50px;
    }

    a.k-tool {
        background-color: gray;
    }
    
    #center {
        margin: auto;
        width: 80%;
        border: 1px solid green;
        padding: 20px;
        position: relative;
        top: 50%;
        transform: translateY(25%);
    }

</style>
